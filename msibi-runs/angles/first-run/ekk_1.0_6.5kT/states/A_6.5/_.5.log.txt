HOOMD-blue 2.9.6 CUDA (10.2) DOUBLE HPMC_MIXED TBB SSE SSE2 SSE3 
Compiled: 03/17/2021
Copyright (c) 2009-2019 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, J Glaser, and S C Glotzer. "HOOMD-blue: A Python package for
  high-performance molecular dynamics and hard particle Monte Carlo
  simulations", Computational Materials Science 173 (2020) 109363
-----
HOOMD-blue is running on the following GPU(s):
 [0]  Tesla P100-PCIE-12GB  56 SM_6.0 @ 1.33 GHz, 12198 MiB DRAM, MNG
run.py:007  |  system = read_gsd("/home/erjank_project/chrisjones/pekk-msibi-final/learning-runs/single-chains/workspace/406ebab1bb7367f5094f47bcde8b8e44/components.gsd", frame=-1, time_step=0)
notice(2): Group "all" created containing 60 particles
run.py:009  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
* M P Howard, A Statt, F Madutsa, T M Truskett, and A Z Panagiotopoulos.
  "Quantized bounding volume hierarchies for neighbor search in molecular
  simulations on graphics processing units", Computational Materials Science 164
  (2019) 139--146
-----
run.py:010  |  nl.reset_exclusions(exclusions=['1-2', '1-3'])
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 2 exclusions             : 2
notice(2): Particles with 3 exclusions             : 2
notice(2): Particles with 4 exclusions             : 56
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: no
run.py:012  |  lj = hoomd.md.pair.lj(nlist=nl, r_cut=0)
run.py:013  |  lj.pair_coeff.set('E', 'E', epsilon=0, sigma=1, r_cut=0)
run.py:014  |  lj.pair_coeff.set('K', 'K', epsilon=0, sigma=1, r_cut=0)
run.py:015  |  lj.pair_coeff.set('E', 'K', epsilon=0, sigma=1, r_cut=0)
run.py:016  |  harmonic_bond = hoomd.md.bond.harmonic()
run.py:017  |  harmonic_bond.bond_coeff.set('E-K', k=850, r0=1.47)
run.py:018  |  harmonic_bond.bond_coeff.set('K-K', k=1450, r0=1.53)
run.py:019  |  atable = hoomd.md.angle.table(width=200)
run.py:020  |  atable.set_from_file('E-K-K', '/home/erjank_project/chrisjones/pekk-msibi-final/msibi-runs/angles-harmonic-bonds-6.5kT/potentials/angle_pot.E-K-K.txt')
run.py:021  |  atable.set_from_file('K-E-K', '/home/erjank_project/chrisjones/pekk-msibi-final/msibi-runs/angles-harmonic-bonds-6.5kT/potentials/angle_pot.K-E-K.txt')
run.py:023  |  _all = hoomd.group.all()
run.py:024  |  hoomd.md.integrate.mode_standard(0.0003)
run.py:026  |  integrator = hoomd.md.integrate.nvt(group=_all, **integrator_kwargs)
run.py:000  |  
import hoomd
import hoomd.md
from hoomd.init import read_gsd

hoomd.context.initialize("")
system = read_gsd("/home/erjank_project/chrisjones/pekk-msibi-final/learning-runs/single-chains/workspace/406ebab1bb7367f5094f47bcde8b8e44/components.gsd", frame=-1, time_step=0)

nl = hoomd.md.nlist.tree()
nl.reset_exclusions(exclusions=['1-2', '1-3'])

lj = hoomd.md.pair.lj(nlist=nl, r_cut=0)
lj.pair_coeff.set('E', 'E', epsilon=0, sigma=1, r_cut=0)
lj.pair_coeff.set('K', 'K', epsilon=0, sigma=1, r_cut=0)
lj.pair_coeff.set('E', 'K', epsilon=0, sigma=1, r_cut=0)
harmonic_bond = hoomd.md.bond.harmonic()
harmonic_bond.bond_coeff.set('E-K', k=850, r0=1.47)
harmonic_bond.bond_coeff.set('K-K', k=1450, r0=1.53)
atable = hoomd.md.angle.table(width=200)
atable.set_from_file('E-K-K', '/home/erjank_project/chrisjones/pekk-msibi-final/msibi-runs/angles-harmonic-bonds-6.5kT/potentials/angle_pot.E-K-K.txt')
atable.set_from_file('K-E-K', '/home/erjank_project/chrisjones/pekk-msibi-final/msibi-runs/angles-harmonic-bonds-6.5kT/potentials/angle_pot.K-E-K.txt')

_all = hoomd.group.all()
hoomd.md.integrate.mode_standard(0.0003)
integrator_kwargs = {'tau': 0.01, 'kT': 6.5}
integrator = hoomd.md.integrate.nvt(group=_all, **integrator_kwargs)


hoomd.dump.gsd(
run.py:037  |  hoomd.run(6000000)
** starting run **
Time 00:00:10 | Step 129240 / 6000000 | TPS 12923.9 | ETA 00:07:34
Time 00:00:20 | Step 263444 / 6000000 | TPS 13420.4 | ETA 00:07:07
Time 00:00:30 | Step 397666 / 6000000 | TPS 13422.2 | ETA 00:06:57
Time 00:00:40 | Step 531772 / 6000000 | TPS 13410.5 | ETA 00:06:47
Time 00:00:50 | Step 665902 / 6000000 | TPS 13412.9 | ETA 00:06:37
Time 00:01:00 | Step 800130 / 6000000 | TPS 13422.8 | ETA 00:06:27
Time 00:01:10 | Step 934554 / 6000000 | TPS 13442.4 | ETA 00:06:16
Time 00:01:20 | Step 1068816 / 6000000 | TPS 13426.2 | ETA 00:06:07
Time 00:01:30 | Step 1203135 / 6000000 | TPS 13431.9 | ETA 00:05:57
Time 00:01:40 | Step 1337279 / 6000000 | TPS 13414.4 | ETA 00:05:47
Time 00:01:50 | Step 1471588 / 6000000 | TPS 13430.8 | ETA 00:05:37
Time 00:02:00 | Step 1605778 / 6000000 | TPS 13418.9 | ETA 00:05:27
Time 00:02:10 | Step 1739842 / 6000000 | TPS 13406.3 | ETA 00:05:17
Time 00:02:20 | Step 1874191 / 6000000 | TPS 13434.9 | ETA 00:05:07
Time 00:02:30 | Step 2008593 / 6000000 | TPS 13440.1 | ETA 00:04:56
Time 00:02:40 | Step 2143061 / 6000000 | TPS 13446.8 | ETA 00:04:46
Time 00:02:50 | Step 2277545 / 6000000 | TPS 13448.3 | ETA 00:04:36
Time 00:03:00 | Step 2411793 / 6000000 | TPS 13424.8 | ETA 00:04:27
Time 00:03:10 | Step 2546229 / 6000000 | TPS 13443.6 | ETA 00:04:16
Time 00:03:20 | Step 2680560 / 6000000 | TPS 13433 | ETA 00:04:07
Time 00:03:30 | Step 2814891 / 6000000 | TPS 13433.1 | ETA 00:03:57
Time 00:03:40 | Step 2949599 / 6000000 | TPS 13470.8 | ETA 00:03:46
Time 00:03:50 | Step 3083915 / 6000000 | TPS 13431.6 | ETA 00:03:37
Time 00:04:00 | Step 3218048 / 6000000 | TPS 13413.2 | ETA 00:03:27
Time 00:04:10 | Step 3352360 / 6000000 | TPS 13431.2 | ETA 00:03:17
Time 00:04:20 | Step 3486697 / 6000000 | TPS 13433.7 | ETA 00:03:07
Time 00:04:30 | Step 3621074 / 6000000 | TPS 13437.7 | ETA 00:02:57
Time 00:04:40 | Step 3755473 / 6000000 | TPS 13439.9 | ETA 00:02:47
Time 00:04:50 | Step 3889854 / 6000000 | TPS 13438 | ETA 00:02:37
Time 00:05:00 | Step 4024018 / 6000000 | TPS 13416.4 | ETA 00:02:27
Time 00:05:10 | Step 4158243 / 6000000 | TPS 13422.5 | ETA 00:02:17
Time 00:05:20 | Step 4292309 / 6000000 | TPS 13406.3 | ETA 00:02:07
Time 00:05:30 | Step 4426540 / 6000000 | TPS 13423 | ETA 00:01:57
Time 00:05:40 | Step 4560781 / 6000000 | TPS 13424.1 | ETA 00:01:47
Time 00:05:50 | Step 4695045 / 6000000 | TPS 13426.3 | ETA 00:01:37
Time 00:06:00 | Step 4829432 / 6000000 | TPS 13438.7 | ETA 00:01:27
Time 00:06:10 | Step 4963804 / 6000000 | TPS 13437.2 | ETA 00:01:17
Time 00:06:20 | Step 5098363 / 6000000 | TPS 13455.9 | ETA 00:01:07
Time 00:06:30 | Step 5232885 / 6000000 | TPS 13452.1 | ETA 00:00:57
Time 00:06:40 | Step 5367494 / 6000000 | TPS 13460.9 | ETA 00:00:46
Time 00:06:50 | Step 5501861 / 6000000 | TPS 13436.6 | ETA 00:00:37
Time 00:07:00 | Step 5636039 / 6000000 | TPS 13417.7 | ETA 00:00:27
Time 00:07:10 | Step 5770321 / 6000000 | TPS 13428.2 | ETA 00:00:17
Time 00:07:20 | Step 5904619 / 6000000 | TPS 13429.8 | ETA 00:00:07
Time 00:07:27 | Step 6000000 / 6000000 | TPS 13424.6 | ETA 00:00:00
Average TPS: 13419.6
---------
-- Neighborlist stats:
20109 normal updates / 20000 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 99
** run complete **
