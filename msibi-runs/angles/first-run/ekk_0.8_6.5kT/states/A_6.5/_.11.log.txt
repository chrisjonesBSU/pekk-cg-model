HOOMD-blue 2.9.6 CUDA (10.2) DOUBLE HPMC_MIXED TBB SSE SSE2 SSE3 
Compiled: 03/17/2021
Copyright (c) 2009-2019 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, J Glaser, and S C Glotzer. "HOOMD-blue: A Python package for
  high-performance molecular dynamics and hard particle Monte Carlo
  simulations", Computational Materials Science 173 (2020) 109363
-----
HOOMD-blue is running on the following GPU(s):
 [0]  Tesla P100-PCIE-12GB  56 SM_6.0 @ 1.33 GHz, 12198 MiB DRAM, MNG
run.py:007  |  system = read_gsd("/home/erjank_project/chrisjones/pekk-msibi-final/learning-runs/single-chains/workspace/b83dce273531102fa2c624e593dddb4c/components.gsd", frame=-1, time_step=0)
notice(2): Group "all" created containing 60 particles
run.py:009  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
* M P Howard, A Statt, F Madutsa, T M Truskett, and A Z Panagiotopoulos.
  "Quantized bounding volume hierarchies for neighbor search in molecular
  simulations on graphics processing units", Computational Materials Science 164
  (2019) 139--146
-----
run.py:010  |  nl.reset_exclusions(exclusions=['1-2', '1-3'])
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 2 exclusions             : 2
notice(2): Particles with 3 exclusions             : 2
notice(2): Particles with 4 exclusions             : 56
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: no
run.py:012  |  lj = hoomd.md.pair.lj(nlist=nl, r_cut=0)
run.py:013  |  lj.pair_coeff.set('E', 'E', epsilon=0, sigma=1, r_cut=0)
run.py:014  |  lj.pair_coeff.set('K', 'K', epsilon=0, sigma=1, r_cut=0)
run.py:015  |  lj.pair_coeff.set('E', 'K', epsilon=0, sigma=1, r_cut=0)
run.py:016  |  harmonic_bond = hoomd.md.bond.harmonic()
run.py:017  |  harmonic_bond.bond_coeff.set('E-K', k=850, r0=1.47)
run.py:018  |  harmonic_bond.bond_coeff.set('K-K', k=1450, r0=1.53)
run.py:019  |  atable = hoomd.md.angle.table(width=200)
run.py:020  |  atable.set_from_file('E-K-K', '/home/erjank_project/chrisjones/pekk-msibi-final/msibi-runs/angles-harmonic-bonds-6.5kT/potentials/angle_pot.E-K-K.txt')
run.py:021  |  atable.set_from_file('K-E-K', '/home/erjank_project/chrisjones/pekk-msibi-final/msibi-runs/angles-harmonic-bonds-6.5kT/potentials/angle_pot.K-E-K.txt')
run.py:023  |  _all = hoomd.group.all()
run.py:024  |  hoomd.md.integrate.mode_standard(0.0003)
run.py:026  |  integrator = hoomd.md.integrate.nvt(group=_all, **integrator_kwargs)
run.py:000  |  
import hoomd
import hoomd.md
from hoomd.init import read_gsd

hoomd.context.initialize("")
system = read_gsd("/home/erjank_project/chrisjones/pekk-msibi-final/learning-runs/single-chains/workspace/b83dce273531102fa2c624e593dddb4c/components.gsd", frame=-1, time_step=0)

nl = hoomd.md.nlist.tree()
nl.reset_exclusions(exclusions=['1-2', '1-3'])

lj = hoomd.md.pair.lj(nlist=nl, r_cut=0)
lj.pair_coeff.set('E', 'E', epsilon=0, sigma=1, r_cut=0)
lj.pair_coeff.set('K', 'K', epsilon=0, sigma=1, r_cut=0)
lj.pair_coeff.set('E', 'K', epsilon=0, sigma=1, r_cut=0)
harmonic_bond = hoomd.md.bond.harmonic()
harmonic_bond.bond_coeff.set('E-K', k=850, r0=1.47)
harmonic_bond.bond_coeff.set('K-K', k=1450, r0=1.53)
atable = hoomd.md.angle.table(width=200)
atable.set_from_file('E-K-K', '/home/erjank_project/chrisjones/pekk-msibi-final/msibi-runs/angles-harmonic-bonds-6.5kT/potentials/angle_pot.E-K-K.txt')
atable.set_from_file('K-E-K', '/home/erjank_project/chrisjones/pekk-msibi-final/msibi-runs/angles-harmonic-bonds-6.5kT/potentials/angle_pot.K-E-K.txt')

_all = hoomd.group.all()
hoomd.md.integrate.mode_standard(0.0003)
integrator_kwargs = {'tau': 0.01, 'kT': 6.5}
integrator = hoomd.md.integrate.nvt(group=_all, **integrator_kwargs)


hoomd.dump.gsd(
run.py:037  |  hoomd.run(6000000)
** starting run **
Time 00:00:10 | Step 129976 / 6000000 | TPS 12997.5 | ETA 00:07:31
Time 00:00:20 | Step 264833 / 6000000 | TPS 13485.7 | ETA 00:07:05
Time 00:00:30 | Step 399619 / 6000000 | TPS 13478.6 | ETA 00:06:55
Time 00:00:40 | Step 534377 / 6000000 | TPS 13475.8 | ETA 00:06:45
Time 00:00:50 | Step 668987 / 6000000 | TPS 13461 | ETA 00:06:36
Time 00:01:00 | Step 803472 / 6000000 | TPS 13448.5 | ETA 00:06:26
Time 00:01:10 | Step 937986 / 6000000 | TPS 13451.4 | ETA 00:06:16
Time 00:01:20 | Step 1072352 / 6000000 | TPS 13436.5 | ETA 00:06:06
Time 00:01:30 | Step 1206773 / 6000000 | TPS 13442 | ETA 00:05:56
Time 00:01:40 | Step 1341702 / 6000000 | TPS 13492.9 | ETA 00:05:45
Time 00:01:50 | Step 1476684 / 6000000 | TPS 13498.1 | ETA 00:05:35
Time 00:02:00 | Step 1611615 / 6000000 | TPS 13493.1 | ETA 00:05:25
Time 00:02:10 | Step 1746694 / 6000000 | TPS 13507.8 | ETA 00:05:14
Time 00:02:20 | Step 1881597 / 6000000 | TPS 13490.3 | ETA 00:05:05
Time 00:02:30 | Step 2016484 / 6000000 | TPS 13488.6 | ETA 00:04:55
Time 00:02:40 | Step 2151315 / 6000000 | TPS 13483.1 | ETA 00:04:45
Time 00:02:50 | Step 2286123 / 6000000 | TPS 13480.8 | ETA 00:04:35
Time 00:03:00 | Step 2420909 / 6000000 | TPS 13478.5 | ETA 00:04:25
Time 00:03:10 | Step 2555655 / 6000000 | TPS 13474.6 | ETA 00:04:15
Time 00:03:20 | Step 2690460 / 6000000 | TPS 13480.4 | ETA 00:04:05
Time 00:03:30 | Step 2825240 / 6000000 | TPS 13478 | ETA 00:03:55
Time 00:03:40 | Step 2959995 / 6000000 | TPS 13475.5 | ETA 00:03:45
Time 00:03:50 | Step 3094695 / 6000000 | TPS 13470 | ETA 00:03:35
Time 00:04:00 | Step 3229300 / 6000000 | TPS 13460.5 | ETA 00:03:25
Time 00:04:10 | Step 3364011 / 6000000 | TPS 13471 | ETA 00:03:15
Time 00:04:20 | Step 3498644 / 6000000 | TPS 13463.3 | ETA 00:03:05
Time 00:04:30 | Step 3633616 / 6000000 | TPS 13497.2 | ETA 00:02:55
Time 00:04:40 | Step 3768706 / 6000000 | TPS 13508.9 | ETA 00:02:45
Time 00:04:50 | Step 3903795 / 6000000 | TPS 13508.8 | ETA 00:02:35
Time 00:05:00 | Step 4038795 / 6000000 | TPS 13499.9 | ETA 00:02:25
Time 00:05:10 | Step 4173791 / 6000000 | TPS 13499.5 | ETA 00:02:15
Time 00:05:20 | Step 4308519 / 6000000 | TPS 13472.8 | ETA 00:02:05
Time 00:05:30 | Step 4443172 / 6000000 | TPS 13465.2 | ETA 00:01:55
Time 00:05:40 | Step 4577895 / 6000000 | TPS 13472.2 | ETA 00:01:45
Time 00:05:50 | Step 4712701 / 6000000 | TPS 13480.1 | ETA 00:01:35
Time 00:06:00 | Step 4847649 / 6000000 | TPS 13494.8 | ETA 00:01:25
Time 00:06:10 | Step 4982447 / 6000000 | TPS 13479.8 | ETA 00:01:15
Time 00:06:20 | Step 5117038 / 6000000 | TPS 13459 | ETA 00:01:05
Time 00:06:30 | Step 5251802 / 6000000 | TPS 13476.3 | ETA 00:00:55
Time 00:06:40 | Step 5386603 / 6000000 | TPS 13480.1 | ETA 00:00:45
Time 00:06:50 | Step 5521071 / 6000000 | TPS 13446.8 | ETA 00:00:35
Time 00:07:00 | Step 5655652 / 6000000 | TPS 13458.1 | ETA 00:00:25
Time 00:07:10 | Step 5790277 / 6000000 | TPS 13462.5 | ETA 00:00:15
Time 00:07:20 | Step 5924963 / 6000000 | TPS 13468.5 | ETA 00:00:05
Time 00:07:25 | Step 6000000 / 6000000 | TPS 13481.4 | ETA 00:00:00
Average TPS: 13466
---------
-- Neighborlist stats:
20130 normal updates / 20000 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 99
** run complete **
