HOOMD-blue 2.9.6 CUDA (10.2) DOUBLE HPMC_MIXED TBB SSE SSE2 SSE3 
Compiled: 03/17/2021
Copyright (c) 2009-2019 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, J Glaser, and S C Glotzer. "HOOMD-blue: A Python package for
  high-performance molecular dynamics and hard particle Monte Carlo
  simulations", Computational Materials Science 173 (2020) 109363
-----
HOOMD-blue is running on the following GPU(s):
 [0]  Tesla P100-PCIE-12GB  56 SM_6.0 @ 1.33 GHz, 12198 MiB DRAM, MNG
run.py:007  |  system = read_gsd("/home/erjank_project/chrisjones/pekk-msibi-final/learning-runs/single-chains/workspace/0f2d30692a6cdb8fd90ae3f6aec03a03/components.gsd", frame=-1, time_step=0)
notice(2): Group "all" created containing 60 particles
run.py:009  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
* M P Howard, A Statt, F Madutsa, T M Truskett, and A Z Panagiotopoulos.
  "Quantized bounding volume hierarchies for neighbor search in molecular
  simulations on graphics processing units", Computational Materials Science 164
  (2019) 139--146
-----
run.py:010  |  nl.reset_exclusions(exclusions=['1-2', '1-3'])
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 2 exclusions             : 2
notice(2): Particles with 3 exclusions             : 2
notice(2): Particles with 4 exclusions             : 56
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: no
run.py:012  |  lj = hoomd.md.pair.lj(nlist=nl, r_cut=0)
run.py:013  |  lj.pair_coeff.set('E', 'E', epsilon=0, sigma=1, r_cut=0)
run.py:014  |  lj.pair_coeff.set('K', 'K', epsilon=0, sigma=1, r_cut=0)
run.py:015  |  lj.pair_coeff.set('E', 'K', epsilon=0, sigma=1, r_cut=0)
run.py:016  |  harmonic_bond = hoomd.md.bond.harmonic()
run.py:017  |  harmonic_bond.bond_coeff.set('E-K', k=850, r0=1.47)
run.py:018  |  harmonic_bond.bond_coeff.set('K-K', k=1450, r0=1.53)
run.py:019  |  atable = hoomd.md.angle.table(width=200)
run.py:020  |  atable.set_from_file('E-K-K', '/home/erjank_project/chrisjones/pekk-msibi-final/msibi-runs/angles-harmonic-bonds-6.5kT/potentials/angle_pot.E-K-K.txt')
run.py:021  |  atable.set_from_file('K-E-K', '/home/erjank_project/chrisjones/pekk-msibi-final/msibi-runs/angles-harmonic-bonds-6.5kT/potentials/angle_pot.K-E-K.txt')
run.py:023  |  _all = hoomd.group.all()
run.py:024  |  hoomd.md.integrate.mode_standard(0.0003)
run.py:026  |  integrator = hoomd.md.integrate.nvt(group=_all, **integrator_kwargs)
run.py:000  |  
import hoomd
import hoomd.md
from hoomd.init import read_gsd

hoomd.context.initialize("")
system = read_gsd("/home/erjank_project/chrisjones/pekk-msibi-final/learning-runs/single-chains/workspace/0f2d30692a6cdb8fd90ae3f6aec03a03/components.gsd", frame=-1, time_step=0)

nl = hoomd.md.nlist.tree()
nl.reset_exclusions(exclusions=['1-2', '1-3'])

lj = hoomd.md.pair.lj(nlist=nl, r_cut=0)
lj.pair_coeff.set('E', 'E', epsilon=0, sigma=1, r_cut=0)
lj.pair_coeff.set('K', 'K', epsilon=0, sigma=1, r_cut=0)
lj.pair_coeff.set('E', 'K', epsilon=0, sigma=1, r_cut=0)
harmonic_bond = hoomd.md.bond.harmonic()
harmonic_bond.bond_coeff.set('E-K', k=850, r0=1.47)
harmonic_bond.bond_coeff.set('K-K', k=1450, r0=1.53)
atable = hoomd.md.angle.table(width=200)
atable.set_from_file('E-K-K', '/home/erjank_project/chrisjones/pekk-msibi-final/msibi-runs/angles-harmonic-bonds-6.5kT/potentials/angle_pot.E-K-K.txt')
atable.set_from_file('K-E-K', '/home/erjank_project/chrisjones/pekk-msibi-final/msibi-runs/angles-harmonic-bonds-6.5kT/potentials/angle_pot.K-E-K.txt')

_all = hoomd.group.all()
hoomd.md.integrate.mode_standard(0.0003)
integrator_kwargs = {'tau': 0.01, 'kT': 6.5}
integrator = hoomd.md.integrate.nvt(group=_all, **integrator_kwargs)


hoomd.dump.gsd(
run.py:037  |  hoomd.run(6000000)
** starting run **
Time 00:00:10 | Step 129113 / 6000000 | TPS 12911.3 | ETA 00:07:34
Time 00:00:20 | Step 263191 / 6000000 | TPS 13407.7 | ETA 00:07:07
Time 00:00:30 | Step 397098 / 6000000 | TPS 13390.7 | ETA 00:06:58
Time 00:00:40 | Step 530960 / 6000000 | TPS 13386.2 | ETA 00:06:48
Time 00:00:50 | Step 664977 / 6000000 | TPS 13401.7 | ETA 00:06:38
Time 00:01:00 | Step 799033 / 6000000 | TPS 13405.5 | ETA 00:06:27
Time 00:01:10 | Step 933115 / 6000000 | TPS 13408.2 | ETA 00:06:17
Time 00:01:20 | Step 1066960 / 6000000 | TPS 13384.4 | ETA 00:06:08
Time 00:01:30 | Step 1200900 / 6000000 | TPS 13393.9 | ETA 00:05:58
Time 00:01:40 | Step 1334656 / 6000000 | TPS 13375.6 | ETA 00:05:48
Time 00:01:50 | Step 1468565 / 6000000 | TPS 13390.9 | ETA 00:05:38
Time 00:02:00 | Step 1602391 / 6000000 | TPS 13382.5 | ETA 00:05:28
Time 00:02:10 | Step 1736401 / 6000000 | TPS 13400.7 | ETA 00:05:18
Time 00:02:20 | Step 1870372 / 6000000 | TPS 13397 | ETA 00:05:08
Time 00:02:30 | Step 2004375 / 6000000 | TPS 13400.3 | ETA 00:04:58
Time 00:02:40 | Step 2138467 / 6000000 | TPS 13409.2 | ETA 00:04:47
Time 00:02:50 | Step 2272987 / 6000000 | TPS 13451.9 | ETA 00:04:37
Time 00:03:00 | Step 2407561 / 6000000 | TPS 13457.4 | ETA 00:04:26
Time 00:03:10 | Step 2542418 / 6000000 | TPS 13485.6 | ETA 00:04:16
Time 00:03:20 | Step 2677076 / 6000000 | TPS 13465.8 | ETA 00:04:06
Time 00:03:30 | Step 2811860 / 6000000 | TPS 13478.3 | ETA 00:03:56
Time 00:03:40 | Step 2946667 / 6000000 | TPS 13480.7 | ETA 00:03:46
Time 00:03:50 | Step 3081372 / 6000000 | TPS 13470.4 | ETA 00:03:36
Time 00:04:00 | Step 3216081 / 6000000 | TPS 13470.8 | ETA 00:03:26
Time 00:04:10 | Step 3350642 / 6000000 | TPS 13456 | ETA 00:03:16
Time 00:04:20 | Step 3485499 / 6000000 | TPS 13485.7 | ETA 00:03:06
Time 00:04:30 | Step 3620330 / 6000000 | TPS 13483.1 | ETA 00:02:56
Time 00:04:40 | Step 3755131 / 6000000 | TPS 13480 | ETA 00:02:46
Time 00:04:50 | Step 3890002 / 6000000 | TPS 13487.1 | ETA 00:02:36
Time 00:05:00 | Step 4024722 / 6000000 | TPS 13472 | ETA 00:02:26
Time 00:05:10 | Step 4159457 / 6000000 | TPS 13473.5 | ETA 00:02:16
Time 00:05:20 | Step 4294320 / 6000000 | TPS 13486.2 | ETA 00:02:06
Time 00:05:30 | Step 4428981 / 6000000 | TPS 13466.1 | ETA 00:01:56
Time 00:05:40 | Step 4563674 / 6000000 | TPS 13469.3 | ETA 00:01:46
Time 00:05:50 | Step 4698599 / 6000000 | TPS 13492.4 | ETA 00:01:36
Time 00:06:00 | Step 4833445 / 6000000 | TPS 13484.5 | ETA 00:01:26
Time 00:06:10 | Step 4968303 / 6000000 | TPS 13485.7 | ETA 00:01:16
Time 00:06:20 | Step 5103219 / 6000000 | TPS 13491.5 | ETA 00:01:06
Time 00:06:30 | Step 5238097 / 6000000 | TPS 13487.8 | ETA 00:00:56
Time 00:06:40 | Step 5372897 / 6000000 | TPS 13479.9 | ETA 00:00:46
Time 00:06:50 | Step 5507687 / 6000000 | TPS 13479 | ETA 00:00:36
Time 00:07:00 | Step 5642433 / 6000000 | TPS 13474.6 | ETA 00:00:26
Time 00:07:10 | Step 5777350 / 6000000 | TPS 13491.6 | ETA 00:00:16
Time 00:07:20 | Step 5912143 / 6000000 | TPS 13479.3 | ETA 00:00:06
Time 00:07:26 | Step 6000000 / 6000000 | TPS 13486.1 | ETA 00:00:00
Average TPS: 13437.4
---------
-- Neighborlist stats:
20095 normal updates / 20000 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 99
** run complete **
